/*
 * File: app/view/Viewport.js
 *
 * This file was generated by Sencha Architect version 3.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('GridEditor.view.Viewport', {
    extend: 'Ext.container.Viewport',

    layout: {
        type: 'border'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    region: 'north',
                    title: 'Search',
                    items: [
                        {
                            xtype: 'datefield',
                            fieldLabel: 'Start',
                            name: 'myname',
                            format: 'd.m.Y',
                            listeners: {
                                change: {
                                    fn: me.onDatefieldChange,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'propertygrid',
                    region: 'east',
                    width: 150,
                    title: 'Detail',
                    source: {
                        'Property 1': 'String',
                        'Property 2': true,
                        'Property 3': '2013-11-28T18:53:44',
                        'Property 4': 123
                    }
                },
                {
                    xtype: 'gridpanel',
                    region: 'center',
                    title: 'Data',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'string',
                            text: 'String'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'number',
                            text: 'Number'
                        },
                        {
                            xtype: 'datecolumn',
                            dataIndex: 'date',
                            text: 'Date'
                        },
                        {
                            xtype: 'booleancolumn',
                            dataIndex: 'bool',
                            text: 'Boolean'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onDatefieldChange: function(field, newValue, oldValue, eOpts) {
        alert(field.name);

    }

});